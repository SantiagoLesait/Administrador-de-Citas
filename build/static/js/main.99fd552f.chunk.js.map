{"version":3,"sources":["Components/Formulario.js","Components/Citas.js","App.js","reportWebVitals.js","index.js"],"names":["Formulario","crearCita","useState","mascota","propietario","fecha","hora","sintomas","cita","actualizarCita","error","actualizarError","actualizarState","e","target","name","value","className","onSubmit","preventDefault","trim","id","uuid","type","placeholder","onChange","Citas","citas","eliminar","onClick","App","citasIniciales","JSON","parse","localStorage","getItem","agregarCitas","eliminarCita","nuevaLista","filter","useEffect","setItem","stringify","titulo","length","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99fd552f.chunk.js","sourcesContent":["import {React, useState} from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Formulario = ({crearCita}) => {\r\n    const [cita, actualizarCita]=useState({\r\n        mascota:'',\r\n        propietario:'',\r\n        fecha:'',\r\n        hora:'',\r\n        sintomas:''\r\n    })\r\n    const [error, actualizarError]=useState(false)\r\n\r\n    const actualizarState = e =>{\r\n        actualizarCita({\r\n            ...cita,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const {mascota, propietario, fecha, hora, sintomas}=cita\r\n\r\n    const despacharSubmit = e =>{\r\n        e.preventDefault()\r\n        if(mascota.trim()==='' || propietario.trim()==='' || fecha.trim()==='' || hora.trim()==='' \r\n        || sintomas.trim()===''){\r\n            actualizarError(true)\r\n            return\r\n        }cita.id=uuid()\r\n        actualizarError(false)\r\n        crearCita(cita)\r\n\r\n        actualizarCita({\r\n            mascota:'',\r\n            propietario:'',\r\n            fecha:'',\r\n            hora:'',\r\n            sintomas:''\r\n        })\r\n        \r\n    }\r\n\r\n    return ( \r\n        <>\r\n        <h1>Crear Cita</h1>\r\n        {error?<p className='alerta-error'>Todos los campos son obligatorios</p> : null}\r\n        <form\r\n        onSubmit={despacharSubmit}\r\n        >\r\n            <label>Mascota</label>\r\n            <input\r\n            type='text'\r\n            name='mascota'\r\n            className='u-full-width'\r\n            placeholder='Nombre de la mascota'\r\n            onChange={actualizarState}\r\n            value={mascota}\r\n            />\r\n            <label>Propietario</label>\r\n            <input\r\n            type='text'\r\n            name='propietario'\r\n            className='u-full-width'\r\n            placeholder='Nombre del dueÃ±o'\r\n            onChange={actualizarState}\r\n            value={propietario}\r\n            />\r\n            <label>Fecha</label>\r\n            <input\r\n            type='date'\r\n            name='fecha'\r\n            className='u-full-width'\r\n            onChange={actualizarState}\r\n            value={fecha}\r\n            />\r\n            <label>Hora</label>\r\n            <input\r\n            type='time'\r\n            name='hora'\r\n            className='u-full-width' \r\n            onChange={actualizarState} \r\n            value={hora}         \r\n            />\r\n            <label>Sintomas</label>\r\n            <textarea\r\n            name='sintomas'\r\n            className='u-full-width'\r\n            onChange={actualizarState}\r\n            value={sintomas}>\r\n            </textarea>\r\n            <button\r\n            type='submit'\r\n            className='u-full-width button-primary'>Agregar</button>\r\n        </form>\r\n        </>\r\n     );\r\n}\r\nFormulario.propTypes={\r\n    crearCita:PropTypes.func.isRequired\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Citas = ({citas, eliminar}) => {\r\n    return (\r\n        <>\r\n        <div className='cita'>\r\n            <p>Mascota: <span>{citas.mascota}</span></p>\r\n            <p>Propietario: <span>{citas.propietario}</span></p>\r\n            <p>Fecha: <span>{citas.fecha}</span></p>\r\n            <p>Hora: <span>{citas.hora}</span></p>\r\n            <p>Sintomas: <span>{citas.sintomas}</span></p>\r\n            <button className='button eliminar u.full.width'\r\n                    onClick={()=>eliminar(citas.id)}\r\n            >&times;Eliminar</button>\r\n        </div>\r\n        </>\r\n      );\r\n}\r\nCitas.propTypes={\r\n    citas:PropTypes.object.isRequired,\r\n    eliminar:PropTypes.func.isRequired\r\n}\r\n \r\nexport default Citas;","import Formulario from './Components/Formulario'\nimport {React, useState, useEffect} from 'react';\nimport Citas from './Components/Citas'\n\nfunction App() {\n\n  let citasIniciales=JSON.parse(localStorage.getItem('citas'));\n  if(!citasIniciales){\n    citasIniciales=[]\n  };\n\n  const [citas, agregarCitas]=useState(citasIniciales)\n\n  const crearCita = cita =>{\n    agregarCitas([\n      ...citas,\n      cita\n    ])\n  }\n\n  const eliminarCita = id =>{\n    const nuevaLista=citas.filter(citas=>citas.id!==id);\n    agregarCitas(nuevaLista)\n  }\n\n  useEffect(()=>{\n      localStorage.setItem('citas', JSON.stringify(citas))\n  }, [citas])\n\n  const titulo=citas.length===0? 'No hay citas' : 'Administra tus citas'\n\n  return (\n    <div>\n\n      <h1>Administracion de pacientes</h1>\n      <div className='container'>\n        <div className='row'>\n          <div className='one-half column'>\n            <Formulario crearCita={crearCita}/>\n          </div>\n          <div className='one-half column'>\n            <h1>{titulo}</h1>\n            {citas.map(citas=>\n              <Citas \n              eliminar={eliminarCita}\n              key={citas.id}\n              citas={citas}/>)}\n          </div>\n        </div>\n      </div>\n\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}